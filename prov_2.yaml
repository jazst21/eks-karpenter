apiVersion: karpenter.sh/v1alpha5
kind: Provisioner
metadata:
  name: spot
spec:
  requirements:
    - key: karpenter.sh/capacity-type
      operator: In
      values: ["on-demand","spot"]
    # - key: eks.amazonaws.com/capacityType
    #   operator: In
    #   values: ["ON_DEMAND","SPOT"]
  provider:
    subnetSelector:
      alpha.eksctl.io/cluster-name: eksworkshop-eksctl
    securityGroupSelector:
      alpha.eksctl.io/cluster-name: eksworkshop-eksctl
  ttlSecondsAfterEmpty: 3
  limits:
    resources:
      cpu: "2000"
  labels:
    billing-team: my-team     
  consolidation:
    enabled: false
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spot
spec:
  replicas: 4
  selector:
    matchLabels:
      app: spot
  template:
    metadata:
      labels:
        app: spot
    spec:
      # nodeSelector:
      #   karpenter.sh/capacity-type: spot
      containers:
      - image: public.ecr.aws/eks-distro/kubernetes/pause:3.2
        name: spot
        resources:
          requests:
            cpu: "0.25"
            memory: 128M
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app: spot
        maxSkew: 1
        topologyKey: karpenter.sh/capacity-type
        # topologyKey: eks.amazonaws.com/capacityType
        whenUnsatisfiable: ScheduleAnyway
